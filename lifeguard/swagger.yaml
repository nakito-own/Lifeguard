consumes:
  - application/json
info:
  description: Приложение для МЧС
  title: mchs
  version: 1.0.0
schemes:
  - http
paths:
  /calls:
    get:
      operationId: listCall
      parameters:
        - name: count
          in: query
          type: integer
          format: uint32
          default: 100
        - name: skip
          in: query
          type: integer
          format: uint64
          default: 0
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: uint64
                timeStart:
                  type: string
                timeFinish:
                  type: string
                address:
                  type: string
                description:
                  type: string
                summingUp:
                  type: string
                title:
                  type: string
        400:
          description: Bad request
        500:
          description: Unknown error
    post:
      operationId: createCall
      parameters:
        - name: body
          in: body
          schema:
            properties:
              timeStart:
                type: string
              description:
                type: string
              address:
                type: string
              title:
                type: string
              crew:
                type: integer
                format: uint64
            required: [ timeStart, description, address, title, crew ]
      responses:
        200:
          description: OK
          schema:
            type: integer
            format: uint64
        400:
          description: Bad request
        500:
          description: Unknown error
  /calls/{id}:
    get:
      operationId: getCall
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
      responses:
        200:
          description: OK
          schema:
            properties:
              id:
                type: integer
                format: uint64
              description:
                type: string
              summingUp:
                type: string
              address:
                type: string
              timeStart:
                type: string
              timeFinish:
                type: string
              title:
                type: string
              crew:
                type: integer
                format: uint64
        400:
          description: Bad request
        500:
          description: Unknown error
    post:
      operationId: updateCall
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
        - name: body
          in: body
          schema:
            properties:
              timeStart:
                type: string
              timeFinish:
                type: string
              description:
                type: string
              summingUp:
                type: string
              address:
                type: string
              title:
                type: string
              crew:
                type: integer
                format: uint64
            required: [timeStart, description, address, title, crew]
      responses:
        200:
          description: OK
          schema:
            type: integer
            format: uint64
        400:
          description: Bad request
        500:
          description: Unknown Error

  /crews:
    get:
      operationId: listCrew
      parameters:
        - name: count
          in: query
          type: integer
          format: uint32
          default: 100
        - name: skip
          in: query
          type: integer
          format: uint64
          default: 0
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: uint64
                timeStart:
                  type: string
                leader:
                  type: integer
                  format: uint64
                comment:
                  type: string
        400:
          description: Bad request
        500:
          description: Unknown error
    post:
      operationId: createCrew
      parameters:
        - name: body
          in: body
          schema:
            properties:
              timeStart:
                type: string
              leader:
                type: integer
                format: uint64
              comment:
                type: string
              roster:
                type: array
                items:
                  type: integer
                  format: uint64
            required: [ timeStart, leader, roster ]
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad request
        500:
          description: Unknown error
  /crews/{id}:
    get:
      operationId: getCrew
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
      responses:
          200:
            description: OK
            schema:
              properties:
                id:
                  type: integer
                  format: uint64
                timeStart:
                  type: string
                timeFinish:
                   type: string
                leader:
                  type: integer
                  format: uint64
                comment:
                  type: string
                roaster:
                  type: array
                  items:
                    type: integer
                    format: uint64
                calls:
                  type: array
                  items:
                    type: integer
                    format: uint64
          400:
            description: Bad request
          500:
            description: Unknown Error
    post:
      operationId: updateCrew
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
        - name: body
          in: body
          schema:
            properties:
              timeStart:
                type: string
              timeFinish:
                type: string
              leader:
                type: integer
                format: uint64
              comment:
                type: string
              roster:
                type: array
                items:
                  type: integer
                  format: uint64
            required: [timeStart, leader, roaster]
      responses:
        200:
          description: OK
        400:
          description: Bad request
        500:
          description: Unknown Error

  /login:
    post:
      operationId: login
      parameters:
        - name: body
          in: body
          schema:
            properties:
              name:
                type: string
              password:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: string
        404:
          description: Неправильные пароль или юзер
        500:
          description: Ошибка сервера
  /users:
    get:
      operationId: listUsers
      parameters:
        - name: session
          in: header
          type: string
        - name: count
          in: query
          type: integer
          format: uint32
          default: 100
        - name: skip
          in: query
          type: integer
          format: uint64
          default: 0
      responses:
        200:
          description: вввв
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: uint64
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
                nick:
                  type: string
                phone:
                  type: string
                vk:
                  type: string
                tg:
                  type: string
                email:
                  type: string
                privateData:
                  type: string
                fired:
                  type: string
                apply:
                  type: string
        400:
          description: плохой запрос
        500:
          description: unknown error
    post:
      operationId: createUser
      parameters:
        - name: session
          in: header
          type: string
        - name: data
          in: body
          schema:
            $ref: "#/definitions/userDesc"
      responses:
        200:
          description: пользователь создан
          schema:
            type: integer
            format: uint64
        400:
          description: плохой запрос
        404:
          description: плохой запрос
        500:
          description: неизвестная ошибка
  /users/{id}:
    get:
      operationId: getUser
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
      responses:
        200:
          description: OK
          schema:
            properties:
              id:
                type: integer
                format: uint64
              name:
                type: string
                maxLength: 255
              phone:
                type: string
                maxLength: 11
              surname:
                type: string
                maxLength: 255
              patronymic:
                type: string
                maxLength: 255
              nick:
                type: string
                maxLength: 255
              vk:
                type: string
                maxLength: 255
              tg:
                type: string
                maxLength: 255
              email:
                type: string
                maxLength: 255
    delete:
      operationId: firedUser
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
        - name: body
          in: body
          schema:
            properties:
              fired:
                type: string
            required: [ fired ]
      responses:
        200:
          description: OK
          schema:
            properties:
              id:
                type: integer
                format: uint64
              fired:
                type: string
        404:
          description: Not Found
        400:
          description: Bad request
        500:
          description: Unknown Error
    post:
      operationId: updateUser
      parameters:
        - name: id
          in: path
          type: integer
          format: uint64
          required: true
        - name: body
          in: body
          schema:
            properties:
              name:
                type: string
                maxLength: 255
              phone:
                type: string
                maxLength: 11
              surname:
                type: string
                maxLength: 255
              patronymic:
                type: string
                maxLength: 255
              nick:
                type: string
                maxLength: 255
              vk:
                type: string
                maxLength: 255
              tg:
                type: string
                maxLength: 255
              email:
                type: string
                maxLength: 255
              apply:
                type: string
                maxLength: 255
            required: [ name, password, phone, surname, patronymic, nick, vk, tg, email, apply ]
      responses:
        200:
          description: OK
definitions:
  userDesc:
    properties:
      name:
        type: string
        maxLength: 255
      password:
        type: string
        maxLength: 255
      phone:
        type: string
        maxLength: 11
      surname:
        type: string
        maxLength: 255
      patronymic:
        type: string
        maxLength: 255
      nick:
        type: string
        maxLength: 255
      vk:
        type: string
        maxLength: 255
      tg:
        type: string
        maxLength: 255
      email:
        type: string
        maxLength: 255
      apply:
        type: string
        maxLength: 255
    required: [ name, password, phone, surname, patronymic, nick, vk, tg, email ]
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
produces:
  - application/json
swagger: "2.0"